initSidebarItems({"enum":[["Error","Chain error"]],"fn":[["block_messages","Returns a Tuple of bls messages of type UnsignedMessage and secp messages of type SignedMessage"],["block_messages_from_cids","Returns a tuple of UnsignedMessage and SignedMessages from their Cid"],["draw_randomness","Computes a pseudorandom 32 byte Vec"],["genesis","Returns the genesis block"],["get_heaviest_tipset","Returns the heaviest tipset"],["get_randomness","Gets 32 bytes of randomness for ChainRand paramaterized by the DomainSeparationTag, ChainEpoch, Entropy"],["put_messages",""],["read_msg_cids","Returns a tuple of cids for both Unsigned and Signed messages"],["tipset_by_height","Returns the tipset behind `tsk` at a given `height`. If the given height is a null round: if `prev` is `true`, the tipset before the null round is returned. If `prev` is `false`, the tipset following the null round is returned."],["tipset_from_keys","Returns Tipset from key-value store from provided cids"]],"struct":[["ChainStore","Generic implementation of the datastore trait and structures"],["TipIndex","Tracks tipsets and their states by TipsetKeys and ChainEpoch."],["TipsetMetadata","TipsetMetadata is the type stored as the value in the TipIndex hashmap.  It contains a tipset pointing to blocks, the root cid of the chain's state after applying the messages in this tipset to it's parent state, and the cid of the receipts for these messages."]],"trait":[["Index","Trait to allow metadata to be indexed by multiple types of structs"]]});